{"version":3,"sources":["components/UI/Card.js","components/UI/Button.js","components/UI/ErrorModal.js","components/Helpers/Wrapper.js","components/Users/AddUser.js","components/Users/UsersList.js","App.js","index.js"],"names":["Card","props","className","children","Button","type","onClick","Backdrop","onConfirm","ModalOverlay","title","message","ErrorModal","ReactDom","createPortal","document","getElementById","Wrapper","AddUser","useState","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","error","setError","onSubmit","event","preventDefault","trim","length","onAddUser","htmlFor","id","value","onChange","target","UsersList","users","map","user","name","age","App","usersList","setUsersList","uName","uAge","prevUserList","Math","random","toString","ReactDOM","render"],"mappings":"wTAQeA,EANF,SAACC,GACV,OAAO,qBAAKC,UAAS,eAAUD,EAAMC,WAA9B,SACFD,EAAME,YCSAC,G,MAXA,SAACH,GACd,OACE,wBACEC,UAAU,SACVG,KAAMJ,EAAMI,MAAQ,SACpBC,QAASL,EAAMK,QAHjB,SAIEL,EAAME,aCFNI,G,MAAW,SAACN,GAChB,OAAO,qBAAKC,UAAU,WAAWI,QAASL,EAAMO,cAG5CC,EAAe,SAACR,GACpB,OACE,eAAC,EAAD,CAAMC,UAAU,QAAhB,UACE,wBAAQA,UAAU,SAAlB,SACE,6BAAKD,EAAMS,UAEb,qBAAKR,UAAU,UAAf,SACE,4BAAID,EAAMU,YAEZ,wBAAQT,UAAU,UAAlB,SACE,cAAC,EAAD,CAAQI,QAASL,EAAMO,UAAvB,0BAwBOI,EAnBI,SAACX,GAClB,OACE,qCACGY,IAASC,aACR,cAAC,EAAD,CAAUN,UAAWP,EAAMO,YAC3BO,SAASC,eAAe,kBAEzBH,IAASC,aACR,cAAC,EAAD,CACEJ,MAAOT,EAAMS,MACbC,QAASV,EAAMU,QACfH,UAAWP,EAAMO,YAEnBO,SAASC,eAAe,qBClCjBC,EAJC,SAAAhB,GACZ,OAAOA,EAAME,UC2EFe,G,MAtEC,SAACjB,GACf,MAA8CkB,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KAmCA,OACE,eAAC,EAAD,WACGD,GACC,cAAC,EAAD,CACEd,MAAOc,EAAMd,MACbC,QAASa,EAAMb,QACfH,UAVa,WACnBiB,EAAS,SAYP,cAAC,EAAD,CAAMvB,UAAU,QAAhB,SACE,uBAAMwB,SA3CW,SAACC,GACtBA,EAAMC,iBACgC,IAAlCR,EAAgBS,OAAOC,QAA6C,IAA7BR,EAAWO,OAAOC,QAOxDR,EAAa,EAChBG,EAAS,CACPf,MAAO,gBACPC,QAAS,mCAIbV,EAAM8B,UAAUX,EAAiBE,GACjCD,EAAmB,IACnBE,EAAc,KAfZE,EAAS,CACPf,MAAO,gBACPC,QAAS,0DAsCT,UACE,uBAAOqB,QAAQ,WAAf,wBACA,uBACEC,GAAG,WACH5B,KAAK,OACL6B,MAAOd,EACPe,SA5BoB,SAACR,GAC7BN,EAAmBM,EAAMS,OAAOF,UA6B1B,uBAAOF,QAAQ,MAAf,6BACA,uBACEC,GAAG,MACH5B,KAAK,OACL6B,MAAOZ,EACPa,SA/Be,SAACR,GACxBJ,EAAcI,EAAMS,OAAOF,UAgCrB,cAAC,EAAD,CAAQ7B,KAAK,SAAb,kCCnDKgC,G,MAdG,SAACpC,GACjB,OACE,cAAC,EAAD,CAAMC,UAAU,QAAhB,SACE,6BACGD,EAAMqC,MAAMC,KAAI,SAACC,GAAD,OACf,+BACGA,EAAKC,KADR,KACgBD,EAAKE,IADrB,gBAASF,EAAKP,aCaTU,MAlBf,WAEE,MAAiCxB,mBAAS,IAA1C,mBAAOyB,EAAP,KAAiBC,EAAjB,KAQA,OACE,qCACE,cAAC,EAAD,CAASd,UARU,SAACe,EAAOC,GAC7BF,GAAa,SAACG,GACZ,MAAM,GAAN,mBAAWA,GAAX,CAAyB,CAACf,GAAGgB,KAAKC,SAASC,WAAYV,KAAMK,EAAOJ,IAAKK,WAOzE,cAAC,EAAD,CAAWT,MAAOM,QCXxBQ,IAASC,OAAO,cAAC,EAAD,IAAStC,SAASC,eAAe,W","file":"static/js/main.d0823a94.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\"\nconst Card = (props) => {\n    return <div className={`card ${props.className}`}>\n        {props.children}\n    </div>\n};\n\nexport default Card;","import React from \"react\";\nimport './Button.css'\nconst Button = (props) => {\n  return (\n    <button\n      className='button'\n      type={props.type || \"button\"}\n      onClick={props.onClick}\n    >{props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport Button from \"./Button\";\nimport Card from \"./Card\";\nimport \"./ErrorModal.css\";\n\nconst Backdrop = (props) => {\n  return <div className=\"backdrop\" onClick={props.onConfirm} />;\n};\n\nconst ModalOverlay = (props) => {\n  return (\n    <Card className=\"modal\">\n      <header className=\"header\">\n        <h2>{props.title}</h2>\n      </header>\n      <div className=\"content\">\n        <p>{props.message}</p>\n      </div>\n      <footer className=\"actions\">\n        <Button onClick={props.onConfirm}> Okay </Button>\n      </footer>\n    </Card>\n  );\n};\nconst ErrorModal = (props) => {\n  return (\n    <>\n      {ReactDom.createPortal(\n        <Backdrop onConfirm={props.onConfirm} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDom.createPortal(\n        <ModalOverlay\n          title={props.title}\n          message={props.message}\n          onConfirm={props.onConfirm}\n        />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </>\n  );\n};\n\nexport default ErrorModal;\n","const Wrapper = props => {\n    return props.children;\n};\n\nexport default Wrapper;","import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../Helpers/Wrapper\"\nimport \"./AddUser.css\";\nconst AddUser = (props) => {\n  const [enteredUsername, setEnteredUsername] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values)\",\n      });\n      return;\n    }\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid age (>0)\",\n      });\n      return;\n    }\n    props.onAddUser(enteredUsername, enteredAge);\n    setEnteredUsername(\"\");\n    setEnteredAge(\"\");\n  };\n\n  const usernameChangeHandler = (event) => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <Wrapper>\n      {error && (\n        <ErrorModal\n          title={error.title}\n          message={error.message}\n          onConfirm={errorHandler}\n        />\n      )}\n      <Card className=\"input\">\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"username\"> Username </label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={enteredUsername}\n            onChange={usernameChangeHandler}\n          />\n          <label htmlFor=\"age\"> Age (in years)</label>\n          <input\n            id=\"age\"\n            type=\"text\"\n            value={enteredAge}\n            onChange={ageChangeHandler}\n          />\n          <Button type=\"submit\"> Add User </Button>\n        </form>\n      </Card>\n    </Wrapper>\n  );\n};\n\nexport default AddUser;\n","import React from \"react\";\nimport Card from \"../UI/Card\";\nimport \"./UsersList.css\";\n\nconst UsersList = (props) => {\n  return (\n    <Card className=\"users\">\n      <ul>\n        {props.users.map((user) => (\n          <li key={user.id}>\n            {user.name} ({user.age} years old)\n          </li>\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default UsersList;\n","import React, {useState} from 'react';\nimport AddUser from './components/Users/AddUser';\nimport UsersList from './components/Users/UsersList';\n\nfunction App() {\n  \n  const [usersList,setUsersList] = useState([]);\n\n  const addUserHandler = (uName, uAge) => {\n    setUsersList((prevUserList) => {\n      return [...prevUserList, {id:Math.random().toString(), name: uName, age: uAge}];\n    });\n  };\n\n  return (\n    <>\n      <AddUser onAddUser={addUserHandler} />\n      <UsersList users={usersList} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}